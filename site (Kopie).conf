{
  hostname_prefix = 'freifunk',
  site_name = 'Freifunk Hameln',
  site_code = 'ffhm',

  prefix4 = '10.11.96.0/20',
  prefix6 = 'fdc7:4c8d:b889:a272::/64',

  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',
  ntp_servers = {'0.openwrt.pool.ntp.org'},
  regdom = 'DE',

  wifi24 = {
    channel = 7,
    ssid = 'hameln.freifunk.net',
    htmode = 'HT20',
    mesh_ssid = 'mesh.freifunk-hameln.de',  -- ESSID used for mesh
    mesh_bssid = '72:CA:FF:EE:BA:BE', -- BSSID used for mesh
    mesh_mcast_rate = 12000,
  },

  wifi5 = {
    ssid = 'hameln.freifunk.net (5GHz',
    channel = 44,
    htmode = 'HT20',
    mesh_ssid = 'mesh.freifunk-hameln.de (5GHz)',
    mesh_bssid = '72:CA:FF:EE:BA:BE',
    mesh_mcast_rate = 12000,
  },

  next_node = {
    -- anycast IPs of all nodes
    ip4 = '10.11.96.1',
    ip6 = 'fdc7:4c8d:b889:a272::1',

    -- anycast MAC of all nodes
    mac = '16:41:ca:ff:be:ef',
  },

  fastd_mesh_vpn = {
    methods = {'salsa2012+umac'},
    enabled = true,
    -- configurable = true,

    mtu = 1406,
    groups = {
      backbone = {
        -- Limit number of connected peers to reduce bandwidth.
        limit = 1,

        -- List of peers.
        peers = {
          peer1 = {
            key = '0364ad394b54c7bd0199ef6205e8b2ed89257d025d591f9bb930f9ad6343cd92',
            remotes = {'ipv4 "51.254.115.77" port 1234'},
          },
        },
      },
    },
  },

  autoupdater = {
    -- Default branch. Don't forget to set GLUON_BRANCH when building!
    branch = 'stable',

    -- List of branches. You may define multiple branches.
    branches = {
      stable = {
        name = 'stable',

        -- List of mirrors to fetch images from. IPv6 required!
        mirrors = {'nothing.yet'},

        -- Number of good signatures required.
        -- Have multiple maintainers sign your build and only
        -- accept it when a sufficient number of them have
        -- signed it.
        good_signatures = 2,

        -- List of public keys of maintainers.
        pubkeys = {
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Alice
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Bob
                'xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx', -- Mary
        },
      },
    },
  },

  -- Node roles
  -- roles = {
  --   default = 'node',
  --   list = {
  --     'node',
  --     'test',
  --     'backbone',
  --     'service',
  --   },
  -- },

  -- Bandwidth limiting
  simple_tc = {
    mesh_vpn = {
      ifname = 'mesh-vpn',

      -- You may enable it by default here.
      enabled = true,

      -- Default upload limit (kbit/s).
      limit_egress = 200,

      -- Default download limit (kbit/s).
      limit_ingress = 3000,
    },
  },

  -- Skip setup mode (config mode) on first boot
  setup_mode = {
    skip = false,
  },
}
